{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Bootcamp-Projects\\\\Module-20-Challenge\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// We import useState and useEffect in our component\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from './components/SearchBar';\nimport IssueList from './components/IssueList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // We declare a state variable that is an array called `issues` and a function to update it.\n  const [issues, setIssues] = useState([]);\n\n  // When the page loads, set the document title to something specific to this app.\n  // This only runs once because of our empty dependency array.\n  useEffect(() => {\n    document.title = 'GitHub issues';\n  }, []);\n\n  // Helper function that performs an API request and sets the `issues` array to a list of issues from GitHub\n  const getRepoIssues = repo => {\n    let issuesURL = `https://api.github.com/repos/${repo}/issues?direction=asc`;\n    console.log('issuesURL', issuesURL);\n    fetch(issuesURL).then(res => res.json()).then(response => setIssues(response));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui container\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onFormSubmit: getRepoIssues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui grid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"eleven wide column\",\n          children: /*#__PURE__*/_jsxDEV(IssueList, {\n            issues: issues\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UjB7VNe0F1VgEf8BwOqcSi+DV2k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SearchBar","IssueList","jsxDEV","_jsxDEV","App","_s","issues","setIssues","document","title","getRepoIssues","repo","issuesURL","console","log","fetch","then","res","json","response","className","children","onFormSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Owner/Bootcamp-Projects/Module-20-Challenge/src/App.js"],"sourcesContent":["// We import useState and useEffect in our component\r\nimport React, { useState, useEffect } from 'react';\r\nimport SearchBar from './components/SearchBar';\r\nimport IssueList from './components/IssueList';\r\n\r\nfunction App() {\r\n  // We declare a state variable that is an array called `issues` and a function to update it.\r\n  const [issues, setIssues] = useState([]);\r\n\r\n  // When the page loads, set the document title to something specific to this app.\r\n  // This only runs once because of our empty dependency array.\r\n  useEffect(() => {\r\n    document.title = 'GitHub issues';\r\n  }, []);\r\n\r\n  // Helper function that performs an API request and sets the `issues` array to a list of issues from GitHub\r\n  const getRepoIssues = (repo) => {\r\n    let issuesURL = `https://api.github.com/repos/${repo}/issues?direction=asc`;\r\n    console.log('issuesURL', issuesURL);\r\n    fetch(issuesURL)\r\n      .then((res) => res.json())\r\n      .then((response) => setIssues(response));\r\n  };\r\n\r\n  return (\r\n    <div className=\"ui container\">\r\n      {/* Here we pass our getRepoIssues function as a prop to SearchBar */}\r\n      <SearchBar onFormSubmit={getRepoIssues} />\r\n      <div className=\"ui grid\">\r\n        <div className=\"ui row\">\r\n          <div className=\"eleven wide column\">\r\n            <IssueList issues={issues} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA;EACAC,SAAS,CAAC,MAAM;IACdS,QAAQ,CAACC,KAAK,GAAG,eAAe;EAClC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,aAAa,GAAIC,IAAI,IAAK;IAC9B,IAAIC,SAAS,GAAI,gCAA+BD,IAAK,uBAAsB;IAC3EE,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,SAAS,CAAC;IACnCG,KAAK,CAACH,SAAS,CAAC,CACbI,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,QAAQ,IAAKZ,SAAS,CAACY,QAAQ,CAAC,CAAC;EAC5C,CAAC;EAED,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAE3BlB,OAAA,CAACH,SAAS;MAACsB,YAAY,EAAEZ;IAAc;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC1CvB,OAAA;MAAKiB,SAAS,EAAC,SAAS;MAAAC,QAAA,eACtBlB,OAAA;QAAKiB,SAAS,EAAC,QAAQ;QAAAC,QAAA,eACrBlB,OAAA;UAAKiB,SAAS,EAAC,oBAAoB;UAAAC,QAAA,eACjClB,OAAA,CAACF,SAAS;YAACK,MAAM,EAAEA;UAAO;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAG;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACzB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACrB,EAAA,CAhCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}